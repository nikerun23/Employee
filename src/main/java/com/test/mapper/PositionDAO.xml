<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
mapper 엘리먼트에 namespace="인터페이스" 속성 추가
인터페이스 내부에 메소드명 정의가 되어 있어야 한다.
메소드명과 id="식별자"가 일치해야 한다. 
-->	
<mapper namespace="com.test.sts.PositionDAO">

	<!--
		SELECT 쿼리 등록은 <select> 엘리먼트 이용.
		id="식별자" 속성 추가시 인터페이스에 정의된 메소드 이름과 일치해야 하며, 호출 메소드명 역할을 하게 된다.
		resultType="자료형클래스" 속성 추가시 SELECT 쿼리 내부에 있는 컬럼명의 정보가
		자료형 클래스의 멤버변수와 일치하는 경우 자동 매핑이 이루어진다.
		<select> 엘리먼트에 SELECT 쿼리 등록.
		주의) 문장 끝에 ; 가 있으면 안된다.
		Dynamic SQL -> 조건 지정을 이용해서 가변 쿼리 작성시 사용 <if>, <choose>, <trim>, <foreach> 등의 엘리먼트 이용
	-->
	<select id="positionList" resultType="com.test.sts.Position">
		SELECT positionId, positionName, minBasicPay, delCheck 
			FROM positionView
			ORDER BY positionId
	</select>
	
	<!--
		INSERT 쿼리는 <insert> 엘리먼트에 등록
		Grade 클래스의 멤버변수와 일치하는 바인딩 변수가 존재하면 자동 바인딩
	-->
	<insert id="add">
		INSERT INTO position (positionId, positionName, minBasicPay) 
			VALUES ((SELECT NVL(MAX(positionId)+1, 1) 
			FROM position), #{positionName}, #{minBasicPay})
	</insert>
	
	<!--
		DELETE 쿼리는 <delete> 엘리먼트에 등록
		Grade 클래스의 멤버변수와 일치하는 바인딩 변수가 존재하면 자동 바인딩
	-->
	<delete id="remove">
		DELETE FROM position WHERE positionId = #{positionId}
	</delete>
	
	<!--
		UPDATE 쿼리는 <update> 엘리먼트에 등록
		Grade 클래스의 멤버변수와 일치하는 바인딩 변수가 존재하면 자동 바인딩
	-->
	<update id="modify">
		UPDATE position SET positionName = #{positionName}, minBasicPay = #{minBasicPay} 
			WHERE positionId = #{positionId}
	</update>
	
	<select id="getMinBasicPay" resultType="java.lang.Integer">
		SELECT minBasicPay FROM positionView 
			WHERE positionId = #{positionId}
	</select>
	
</mapper>