<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.test.sts" />
	
	<!-- JDBC 액션을 위한 Connection 객체 등록 -->
	<!-- ojdbc6.jar 파일 필요 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<beans:property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@211.63.89.71:1521:xe" />
		<beans:property name="username" value="hyengeun" />
		<beans:property name="password" value="1234" />
	</beans:bean>

	<!-- Spring JDBC 환경 설정 제거 -->
	
	<!-- MyBatis 환경 설정 추가 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- setter에 의한 의존주입 -->
		<!-- 데이터소스 정보 제공 -->
		<beans:property name="dataSource" ref="dataSource" />
		<!-- Mapper 파일(SQL Statement 정보가 들어있는 파일) 정보 제공 -->
		<!-- value="" 속성에 Mapper 파일 정보 지정 -->
		<beans:property name="mapperLocations" value="classpath:com/test/mapper/*.xml" />
	</beans:bean>
	<!-- SqlSessionTemplate 객체가 Spring JdbcTemplate 객체를 대체한다 -->
	<!-- SqlSession은 데이터베이스에 대해 SQL명령어를 실행하기 위해 필요한 모든 메소드를 가지고 있다. 그래서 SqlSession 인스턴스를 통해 직접 SQL 구문을 실행할 수 있다. --> 
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 생성자에 의한 의존주입 -->
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	
</beans:beans>
